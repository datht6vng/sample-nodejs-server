services:
  sfu:
    container_name: sfu
    image: golang:alpine
    volumes:
      - ./ion-sfu:/service/ion-sfu
      - ./ion-sfu/sfu.toml:/configs/sfu.toml
      - ./ion-sfu/logs:/logs
    working_dir: /service/ion-sfu
    # restart: always
    command: >
      sh -c "cat /configs/sfu.toml && go run ./cmd/signal/allrpc/main.go -c /configs/sfu.toml"
    ports:
      - 5000:5000/udp # ICE mux port
      - 5001:5001/tcp # ICE mux port
    networks:
      - backend 
    
  controller:
    container_name: controller
    build:
      dockerfile: ./controller/Dockerfile.local
      context: .
    volumes:
      - ./controller:/service/controller
      - ./controller/configs:/configs
      - ./controller/logs:/logs
      - ./controller/videos:/videos
    working_dir: /service/controller
    # restart: always
    command: >
      sh -c "go run ./cmd/controller/main.go -c /configs/controller.toml"
    ports:
      - 5551:5551 # gRPC port
      - 8080:8080 # HTTP + WS port

    environment:
    - GST_DEBUG=1
    networks:
      - backend

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend 

  message-broker-server:
    build:
      context: message-broker-server
      dockerfile: Dockerfile
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
        - 1883:1883
    volumes:
        - ./docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - backend 

  event-simulator:
    container_name: event-simulator
    build:
      context: event-simulator
      dockerfile: Dockerfile
    volumes:
      - ./event-simulator:/usr/app
      # - event_node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: >
      sh -c "npm install && npm run dev"
    restart: always
    ports:
      - "3006:3006"
    depends_on:
      - mongodb
    networks:
      - backend 

  node-api-server:
    container_name: node_api_server
    build:
      context: node-api-server
      dockerfile: Dockerfile.local
    environment:
      - BROKER_HOST=rabbitmq
      - CONFIG_PATH=./config/node-api-server.toml
    volumes:
      - ./node-api-server:/usr/app
      # - api_node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: >
      sh -c "npm run dev"
    # restart: always
    ports:
      - "3000:3000"
      - "50051:50051"
    depends_on:
      - message-broker-server
      - mongodb
    networks:
      - backend 

  node-api-gateway:
    container_name: node_api_gateway
    build:
      context: node-api-gateway
      dockerfile: Dockerfile.local
      # dockerfile: TestDockerfile
    environment:
      - CONFIG_PATH=./config/node-api-gateway.toml
    volumes:
      - ./node-api-gateway:/usr/app
      # - gateway_node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: >
      sh -c "npm run dev"
    # restart: always
    ports:
      - "3001:3001"
    # depends_on:
    #   - node-api-server
    networks:
      - backend 
    
  redis:
    container_name: redis
    image: "redis"
    ports:
      - "6379:6379"
    command: redis-server --maxmemory-policy allkeys-lru --maxmemory 4G
    restart: always
    networks:
      - backend 
    volumes:
      - redis-data:/data

  rtsp_server:
    build:
      context: rtsp_server
      dockerfile: Dockerfile
    volumes:
      - ./rtsp_server/rtsp-simple-server.yml:/configs/rtsp_server/rtsp-simple-server.yml
    networks:
     - backend
    ports:
      - 8554:8554 # RTSP port
      - 8322:8322 # RTP port
      - 8000-8003:8000-8003 # multicast 

volumes:
  # Lưu node module vô volume bị bug
  #api_node_modules:
  #gateway_node_modules:
  # event_node_modules:
  mongodb_data:
  redis-data:


networks:
  backend:
    external: true
    name: backend
    driver: bridge
